buildscript {
	ext {
		springBootVersion = '1.4.1.RELEASE'
	}
	repositories {
		mavenCentral()
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
        classpath('se.transmode.gradle:gradle-docker:1.2')
	}
}

apply plugin: 'java'
apply plugin: 'docker'
apply plugin: 'eclipse'
apply plugin: 'spring-boot'
apply plugin: 'war'

ext {
  guavaVersion = '20.0'
  jadiraVersion = '5.0.0.GA'
}


sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories {
	mavenCentral()
}

dependencies {
	compile('org.apache.commons:commons-lang3:3.0')
	compile('org.springframework.boot:spring-boot-starter-actuator')
	compile('org.springframework.boot:spring-boot-starter-data-jpa')
	compile('org.springframework.boot:spring-boot-starter-data-rest')
	compile('org.projectlombok:lombok')
	compile('org.springframework.boot:spring-boot-starter-web')
	runtime('mysql:mysql-connector-java')
	runtime('org.springframework.boot:spring-boot-starter-web')
	
	compile group: 'org.liquibase', name: 'liquibase-core', version: '3.3.1'
	compile('com.fasterxml.jackson.datatype:jackson-datatype-jsr310')
	
	
	compile group: 'org.springframework.boot', name: 'spring-boot-starter-security'
	compile group: 'org.springframework', name: 'spring-context-support'
	compile group: 'joda-time', name: 'joda-time'
	compile group: 'com.fasterxml.jackson.datatype', name: 'jackson-datatype-joda'
	compile group: 'com.google.guava', name: 'guava', version: guavaVersion
	compile group: 'com.github.ben-manes.caffeine', name: 'caffeine'
	compile group: 'org.jadira.usertype', name: 'usertype.extended', version: jadiraVersion
	providedRuntime 'org.springframework.boot:spring-boot-starter-tomcat'
   
	testCompile group: 'org.springframework.boot', name: 'spring-boot-starter-test'
  	testCompile group: 'org.springframework.security', name: 'spring-security-test'

}

task buildDocker(type: Docker, dependsOn: build) {
//  push = true
  applicationName = jar.baseName
  dockerfile = file('src/main/docker/Dockerfile')
  doFirst {
    copy {
      from jar
      into stageDir
    }
  }
}
